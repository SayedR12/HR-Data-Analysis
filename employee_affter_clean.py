# -*- coding: utf-8 -*-
"""EMPLOYEE_AFFTER CLEAN.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/16A7K1nL22iHV-nRTwsnjV3vE8E74kF1e
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

df=pd.read_csv('/content/Employee.csv')
df

"""**EXPLORING DATA**"""

df.info()
# hireDate to date

df.shape

"""**CHECK data types**"""

df.dtypes
# hireDate to date

"""**CHECK DUBLICATE**"""

df.duplicated()

df.duplicated().sum()

"""**CHECK NULLS**"""

df.isnull().sum()

"""**CHECK OUTLIERS**"""

numerical_columns = [
    "Age",
    "DistanceFromHome (KM)",
    "Education",
    "Salary",
    "StockOptionLevel",
    "YearsAtCompany",
    "YearsInMostRecentRole",
    "YearsSinceLastPromotion",
    "YearsWithCurrManager"
]

# Calculate the IQR and identify outliers
outliers = {}
for col in numerical_columns:
    Q1 = df[col].quantile(0.25)
    Q3 = df[col].quantile(0.75)
    IQR = Q3 - Q1
    outliers[col] = df[(df[col] < Q1 - 1.5 * IQR) | (df[col] > Q3 + 1.5 * IQR)][col]

# Visualize the numerical columns with box plots to spot outliers
plt.figure(figsize=(15, 8))
sns.boxplot(data=df[numerical_columns], orient="h")
plt.title("Box Plot for Numerical Columns to Detect Outliers")
plt.xlabel("Value")
plt.show(), outliers

"""**PREPROCESSING**"""

df.describe()

df['HireDate']=pd.to_datetime(df['HireDate'],errors='coerce')

df.isnull().sum()

df.dtypes

df.drop('EmployeeID',axis=1,inplace=True)

df.duplicated().sum()

"""**FILL SHORTUCTS**"""

df['State'] = df['State'].replace('NY', 'New York')
df['State'] = df['State'].replace('CA', 'California')
df['State'] = df['State'].replace('IL', 'Illinois')

df['State'].value_counts()

Q1_salary = df['Salary'].quantile(0.25)
Q3_salary = df['Salary'].quantile(0.75)
IQR_salary = Q3_salary - Q1_salary

# Outliers based on IQR
iqr_outliers_salary = df[(df['Salary'] < Q1_salary - 1.5 * IQR_salary) | (df['Salary'] > Q3_salary + 1.5 * IQR_salary)]['Salary']

len(iqr_outliers_salary), iqr_outliers_salary.min(), iqr_outliers_salary.max()

df.groupby('Salary')['Department'].value_counts()

df.groupby('Salary')['YearsAtCompany'].value_counts()

df.to_csv('/content/Employee.csv',index = False)